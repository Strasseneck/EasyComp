# view registrations for competition
@app.route("/registrations/<competition>", methods=["GET"])
@login_required
def registrations(competition):

    #get id and name of competition
    rows = db.execute("SELECT DISTINCT id, name FROM competitions WHERE name LIKE ?", competition)
    comp_id = rows[0]["id"]
    compname = rows[0]["name"]
    
    registrations = []
    divisions = {}
    divnames = []
    divids = []
    # get division name and id
    rows = db.execute("SELECT DISTINCT id, name FROM divisions INNER JOIN competitors on competitors.division_id = divisions.id WHERE competition_id = ?", comp_id)
    for i in range(len(rows)):
        divname = rows[i]["name"]
        divnames.append(divname)
        divid = rows[i]["id"] 
        divids.append(divid)

    # get competitors names for each division
    for i in range(len(divids)):
        competitors = []
        divid = divids[i] 
        divname = divnames[i]
        rows = db.execute("SELECT DISTINCT firstname, lastname FROM users INNER JOIN competitors on competitors.competitor_id = users.id WHERE division_id = ?", divid)
        for j in range(len(rows)):
            competitor = (rows[j]["firstname"] + " " + rows[j]["lastname"])
            competitors.append(competitor)
        # add values to divisions dict        
        divisions["division"] = divname
        divisions["competitors"] = competitors
        # append registrations list with the divisions dictionary
        registrations.append(divisions)
   
        
    print(registrations)
    return render_template("view-comp-registrations.html", divnames=divnames, compname=compname, registrations=registrations

   {'Blue Rooster 57.5kg': [{'id': 1, 'competitor1_name': 'Max Musterman', 'competitor2_name': 'Joe Bloggs'}, {'id': 2, 'competitor1_name': 'Sven Svensson', 'competitor2_name': 'John Smith'}], 
   'Blue Superfeather 65kg': [{'id': 3, 'competitor1_name': 'John Smith', 'competitor2_name': 'Joe Bloggs'}]}

   [
    {'id': 1, 'div_name': 'Blue Rooster 57.5kg', 'competitor1_name': 'John Smith', 'competitor2_name': 'Joe Bloggs'},
    {'id': 2, 'div_name': 'Blue Rooster 57.5kg', 'competitor1_name': 'Max Musterman', 'competitor2_name': 'Sven Svensson'},
    {'id': 3, 'div_name': 'Blue Superfeather 65kg', 'competitor1_name': 'John Smith', 'competitor2_name': 'Joe Bloggs'}
    ]


     rows = db.execute("SELECT DISTINCT id FROM matchresults")
                n = len(rows)
                if n == 0:
                    db.execute("INSERT INTO matches (comp_id, div_id, div_name, competitor1_name, competitor2_name) VALUES (?,?,?,?,?)",
                            comp_id, div_id, divname, competitor1, competitor2) 
                else:
                    rows = db.execute("SELECT DISTINCT id FROM matchresults")
                    n = n -1
                    match_id = rows[n]["id"]
                    match_id = int(match_id)
                    match_id = match_id + 1
                    # compare to last match id 
                    rows = db.execute("SELECT DISTINCT id FROM matches")
                    n = len(rows)
                    match_id2 = rows[n]["id"]
                    match_id2 = int(match_id2)
                    match_id2 = match_id2 + 1


                    print(match_id)


<div class="accordion" id="accordionDivisions">
    <div class="accordion-item">
      <h2 class="accordion-header" id="headingOne">
        <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
          Divisions
        </button>
      </h2>
      <div id="collapseOne" class="accordion-collapse collapse" aria-labelledby="headingOne" data-bs-parent="#accordionDivisions">
        {% for division in divisions %}
        <div class="accordion-body">
            
            <div class="accordion-item">
                <h2 class="accordion-header" id="headingTwo">
                  <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">  
                  {{ division }}
                </button>
                </h2>
                <div id="collapseTwo" class="accordion-collapse collapse" aria-labelledby="headingTwo" data-bs-parent="#accordionDivisions">
                  <div class="accordion-body">
                    <table class="table table-dark table-striped">
                        <thead>
                            <tr></tr>
                        </thead> 
                        <tbody>
                            {% set list1 = divisions[division] %}
                            {% for elem in list1 %}
                            <tr>
                                <td>{{ elem }}</td>
                            </tr>
                            {% endfor %}    
                        </tbody>
                    </table>
                  </div>
                </div>
              </div>    
            </div>




            {% for division in divisions %}

<div class="accordion" id="accordionDivision">
    <div class="accordion-item">
      <h2 class="accordion-header" id="headingOne">
        <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
          {{ division }}
        </button>
      </h2>
      <div id="collapseOne" class="accordion-collapse collapse show" aria-labelledby="headingOne">
        <div class="accordion-body">
            <table class="table table-dark table-striped">
                <thead>
                    <tr></tr>
                </thead> 
                <tbody>
                    {% set list1 = divisions[division] %}
                    {% for elem in list1 %}
                    <tr>
                        <td>{{ elem }}</td>
                    </tr>
                    {% endfor %}    
                </tbody>
            </table>
            <a href="enterdivision/{{ name }}:{{ division }}">Enter Division</a>

      </div>
    </div>
{% endfor %}


{% endblock %}



  divisions = {}
    divnames = []
    divids = []
    
    # select competitons created by user
    competitions = db.execute("SELECT DISTINCT name, format FROM competitions WHERE organizer_id = ?", session["user_id"])

    comprows = db.execute("SELECT DISTINCT id FROM competitions WHERE organizer_id = ?", session["user_id"])
    for i in range(len(comprows)):
        compid = comprows[0]["id"]
        # get division name and id
        rows = db.execute("SELECT DISTINCT id, name FROM divisions INNER JOIN competitors on competitors.division_id = divisions.id WHERE competition_id = ?", compid)
        for i in range(len(rows)):
            divname = rows[i]["name"]
            divnames.append(divname)
            divid = rows[i]["id"] 
            divids.append(divid)
    
    # get competitors names for each division
    for i in range(len(divids)):
        competitors = []
        divid = divids[i] 
        divname = divnames[i]
        rows = db.execute("SELECT DISTINCT firstname, lastname FROM users INNER JOIN competitors on competitors.competitor_id = users.id WHERE division_id = ?", divid)
        for j in range(len(rows)):
            competitor = (rows[j]["firstname"] + " " + rows[j]["lastname"])
            competitors.append(competitor)
        # add values to divisions dict        
        divisions[divname] = competitors